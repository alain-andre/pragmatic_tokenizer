#inherit_from: .rubocop_todo.yml

# check https://gist.github.com/jhass/a5ae80d87f18e53e7b56/84972ca6c0c5a59768ae07ee0a639d03cc72d375

Metrics/LineLength:
  Max: 99
  Enabled: false  # as it complains about long comments too

Style/EmptyLinesAroundClassBody:
  Enabled: false

Style/EmptyLinesAroundModuleBody:
  Enabled: false

Style/AsciiComments:
  Enabled: false

Style/ExtraSpacing:
  AllowForAlignment: true

Style/IndentationConsistency:
  EnforcedStyle: rails

Style/AndOr:
  Enabled: false  # complains about "redirect_to ... and return" in Rails controllers

# Fail is an alias of raise. Avoid aliases, it's more cognitive load for no gain.
# The argument that fail should be used to abort the program is wrong too,
# there's Kernel#abort for that.
Style/SignalException:
  EnforcedStyle: only_raise

Style/StringLiterals:
  Enabled: false

# allow Rubymine "Continuation indent" of 4 characters:
Style/CaseIndentation:
  IndentationWidth: 4
Style/FirstParameterIndentation:
  IndentationWidth: 4
Style/IndentArray:
  IndentationWidth: 4
Style/IndentAssignment:
  IndentationWidth: 4
Style/IndentHash:
  IndentationWidth: 4

Style/MultilineMethodCallIndentation:
  EnforcedStyle: indented
  IndentationWidth: 4

Style/MultilineOperationIndentation:
  EnforcedStyle: indented
  IndentationWidth: 4

# these are not continued (e.g. 'private'), so we keep them at 2 chars
Style/AccessModifierIndentation:
  IndentationWidth: 2

Style/SpaceAroundOperators:
  AllowForAlignment: true

# Most readable form.
Style/AlignHash:
  EnforcedHashRocketStyle: table
  EnforcedColonStyle: table

# Mixing the styles looks just silly.
Style/HashSyntax:
  EnforcedStyle: ruby19_no_mixed_keys

# consider this to keep method parameters short
# No space makes the method definition shorter and differentiates
# from a regular assignment.
Style/SpaceAroundEqualsInParameterDefault:
  EnforcedStyle: no_space

Rails:
  Enabled: false

AllCops:
  Include:
    - '**/Rakefile'
  Exclude:
    - 'bin/**/*'
  TargetRubyVersion:
    2.2

# These are all the cops that are disabled in the default configuration.

Style/AutoResourceCleanup:
  Description: 'Suggests the usage of an auto resource cleanup version of a method (if available).'
  Enabled: true

Style/CollectionMethods:
  Description: 'Preferred collection methods.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#map-find-select-reduce-size'
  Enabled: true

#Style/Encoding:
#  Description: 'Use UTF-8 as the source file encoding.'
#  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#utf-8'
#  Enabled: true

#Style/InlineComment:
#  Description: 'Avoid inline comments.'
#  Enabled: true

Style/FirstArrayElementLineBreak:
  Description: >-
                 Checks for a line break before the first element in a
                 multi-line array.
  Enabled: true

Style/FirstHashElementLineBreak:
  Description: >-
                 Checks for a line break before the first element in a
                 multi-line hash.
  Enabled: true

Style/FirstMethodArgumentLineBreak:
  Description: >-
                 Checks for a line break before the first argument in a
                 multi-line method call.
  Enabled: true

Style/FirstMethodParameterLineBreak:
  Description: >-
                 Checks for a line break before the first parameter in a
                 multi-line method parameter definition.
  Enabled: true

Style/MethodCalledOnDoEndBlock:
  Description: 'Avoid chaining a method call on a do...end block.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#single-line-blocks'
  Enabled: true

Style/MissingElse:
  Description: >-
                Require if/case expressions to have an else branches.
                If enabled, it is recommended that
                Style/UnlessElse and Style/EmptyElse be enabled.
                This will conflict with Style/EmptyElse if
                Style/EmptyElse is configured to style "both"
  Enabled: false
  EnforcedStyle: both
  SupportedStyles:
    # if - warn when an if expression is missing an else branch
    # case - warn when a case expression is missing an else branch
    # both - warn when an if or case expression is missing an else branch
    - if
    - case
    - both

#Style/MultilineAssignmentLayout:
#  Description: 'Check for a newline after the assignment operator in multi-line assignments.'
#  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#indent-conditional-assignment'
#  Enabled: true

Style/MutableConstant:
  Description: 'Do not assign mutable objects to constants.'
  Enabled: true

Style/OptionHash:
  Description: "Don't use option hashes when you can use keyword arguments."
  Enabled: true

Style/Send:
  Description: 'Prefer `Object#__send__` or `Object#public_send` to `send`, as `send` may overlap with existing methods.'
  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#prefer-public-send'
  Enabled: true

Style/StringMethods:
  Description: 'Checks if configured preferred methods are used over non-preferred.'
  Enabled: true

#Style/SymbolArray:
#  Description: 'Use %i or %I for arrays of symbols.'
#  StyleGuide: 'https://github.com/bbatsov/ruby-style-guide#percent-i'
#  Enabled: true

Lint/LiteralInInterpolation:
  Description: 'Avoid interpolating literals in strings'
  AutoCorrect: true
